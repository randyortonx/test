# usermod -aG docker gitlab-runner

stages:
  - build
  - deploy

variables:
  PROJECT_NAME: $CI_PROJECT_NAME
  REGISTRY_URL: registry-docker.org

build_test_docker:
  stage: build
  before_script:
#    - git submodule sync --recursive
#    - git submodule update --init --recursive
  script:
    - docker build . -t $PROJECT_NAME
    - docker tag $PROJECT_NAME $REGISTRY_URL/$PROJECT_NAME:test
    - docker push $REGISTRY_URL/$PROJECT_NAME:test
  only:
    - test
  tags:
    - builder

deploy_test_docker:
  stage: deploy
  script:
    - podmanName=$(podman ps -a --filter name=test -q)
    - if [ -n $podmanName ]; then podman stop $podmanName && podman rm $podmanName; fi
    - cd /home/test
    - git config pull.rebase false && git pull origin master
    - docker build -t $CI_COMMIT_BRANCH$CI_PIPELINE_ID .
    - docker run -d --name test -p 8888:8888 $CI_COMMIT_BRANCH$CI_PIPELINE_ID
#    - docker stack deploy -c deploy.test.yml --with-registry-auth $PROJECT_NAME
  only:
    - master
  tags:
    - test

build_docker:
  stage: build
  before_script:
#    - git submodule sync --recursive
#    - git submodule update --init --recursive
  script:
    - docker build . -t $PROJECT_NAME
    - docker tag $PROJECT_NAME $REGISTRY_URL/$PROJECT_NAME:$CI_COMMIT_REF_NAME
    - docker tag $PROJECT_NAME $REGISTRY_URL/$PROJECT_NAME:latest
    - docker push $REGISTRY_URL/$PROJECT_NAME:$CI_COMMIT_REF_NAME
    - docker push $REGISTRY_URL/$PROJECT_NAME:latest
  only:
    - tags
  tags:
    - builder

deploy_docker:
  stage: deploy
  script:
    - echo SUCCESS
  only:
    - tags
  tags:
    - builder
